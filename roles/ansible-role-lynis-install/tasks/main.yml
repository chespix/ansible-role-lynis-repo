---
# tasks file for lynis

- name: Download Lynis.
  get_url:
    url: "https://cisofy.com/files/lynis-{{ lynis_version }}.tar.gz"
    dest: "{{ lynis_src_directory }}/lynis-{{ lynis_version }}.tar.gz"
    sha256sum: "{{ lynis_version_sha256sum }}"

- name: Ensure Lynis src directory exists.
  file:
    path: "{{ lynis_src_directory }}/lynis-{{ lynis_version }}"
    state: directory

- name: Extract Lynis.
  unarchive:
    src: "{{ lynis_src_directory }}/lynis-{{ lynis_version }}.tar.gz"
    dest: "{{ lynis_src_directory }}/lynis-{{ lynis_version }}"
    creates: "{{ lynis_src_directory }}/lynis-{{ lynis_version }}/lynis"
    copy: no

- name: Copy Lynis to dest directory.
  synchronize:
    src: "{{ lynis_src_directory }}/lynis-{{ lynis_version }}/lynis/" 
    dest: "{{ lynis_dest_directory }}/lynis"
    rsync_opts:
       - "--delete"
       - "-ri" 
       - "--exclude=plugins/*"
  delegate_to: "{{ inventory_hostname }}"

- name: Ensure Lynis log directory exists (when lynis_cron).
  file:
    path: "{{ lynis_log_directory }}"
    state: directory
    owner: root
    group: root
    mode: 0750
  when: lynis_cron

- name: Configure Lynis cron task (when lynis_cron).
  cron:
    name: Run Lynis
    cron_file: lynis
    minute: "{{ lynis_cron_minute }}"
    hour: "{{ lynis_cron_hour }}"
    user: root
    job: cd {{ lynis_dest_directory }}/lynis && ./lynis -c --auditor "automated" --cronjob > {{ lynis_log_directory }}/report-$(hostname).$(date +%Y%m%d).txt && mv /var/log/lynis.log {{ lynis_log_directory }}/report-log-$(hostname).$(date +%Y%m%d).log && mv /var/log/lynis-report.dat {{ lynis_log_directory }}/report-data-$(hostname).$(date +%Y%m%d).txt >/dev/null 2>&1
  when: lynis_cron
